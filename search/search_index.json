{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#title-github-auto-push","title":"title: GitHub Auto Push","text":"Setup Overview Guide License"},{"location":"#github-auto-push-from-local-to-remote","title":"\ud83d\ude80 GitHub Auto Push from Local to Remote","text":"<p>This guide covers the entire process of creating a GitHub repo, pushing files using a Python script, handling authentication with <code>.env</code>, and setting up GitHub Pages.</p>"},{"location":"#setup-overview","title":"\ud83d\udd27 Setup Overview","text":"<ul> <li>Python + Git automation</li> <li><code>.env</code> for secure tokens</li> <li>GitHub Pages-ready <code>docs/</code></li> <li>Reusable across projects</li> </ul>"},{"location":"#step-by-step-guide","title":"\ud83d\udcd8 Step-by-Step Guide","text":"<ol> <li>Initialize git</li> <li>Create <code>.env</code> file</li> <li>Use Python script to commit + push</li> <li>Host with GitHub Pages</li> </ol> <p>See full Markdown Article</p>"},{"location":"#license","title":"\ud83e\udeaa License","text":"<p>MIT License</p>"},{"location":"#contributors","title":"\ud83d\udc65 Contributors","text":"<ul> <li>Happymana3</li> </ul>"},{"location":"github_auto_push_article/","title":"\ud83e\udde0 Automate Your GitHub Workflow from Scratch: Push Any Project with a Single Script (Even Create Repos Automatically!)","text":"<p>Tired of manually setting up GitHub repos, dragging files into folders, and fixing annoying Git errors? What if I told you you could automate everything\u2014from organizing your files to creating a new GitHub repo\u2014using just one Python script?</p> <p>In this tutorial, we\u2019ll build a robust, reusable <code>push_to_github.py</code> script that does all of this and more.</p>"},{"location":"github_auto_push_article/#features-of-the-final-script","title":"\ud83e\uddf0 Features of the Final Script","text":"<p>\u2705 Automatically organizes files into a project folder \u2705 Loads your GitHub credentials securely from <code>.env</code> \u2705 Creates <code>.gitignore</code>, <code>requirements.txt</code>, and <code>README.md</code> \u2705 Initializes Git and pushes to GitHub (including history merging) \u2705 Creates a GitHub repo using GitHub\u2019s API \u2705 Handles errors gracefully with helpful logs \u2705 Works with any Python project \u2014 even Jupyter notebooks!</p>"},{"location":"github_auto_push_article/#1-project-structure-before-after","title":"\ud83d\uddc3\ufe0f 1. Project Structure Before &amp; After","text":"<p>Before:</p> <pre><code>/content\n\u251c\u2500\u2500 diabetes_prediction.ipynb\n\u251c\u2500\u2500 diabetes.csv\n\u251c\u2500\u2500 push_to_github.py\n</code></pre> <p>After:</p> <pre><code>/content\n\u2514\u2500\u2500 diabetes_project\n    \u251c\u2500\u2500 diabetes_prediction.ipynb\n    \u251c\u2500\u2500 diabetes.csv\n    \u251c\u2500\u2500 .gitignore\n    \u251c\u2500\u2500 requirements.txt\n    \u251c\u2500\u2500 README.md\n    \u2514\u2500\u2500 push_to_github.py\n</code></pre>"},{"location":"github_auto_push_article/#2-create-a-env-file-to-store-credentials","title":"\ud83d\udd10 2. Create a <code>.env</code> File to Store Credentials","text":"<pre><code>GITHUB_USERNAME=Happymana3\nGITHUB_EMAIL=your_email@example.com\nGITHUB_TOKEN=ghp_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\nREPO_NAME=diabetes_prediction\nPROJECT_FOLDER=diabetes_project\n</code></pre> <p>Never share this file or push it to GitHub!</p>"},{"location":"github_auto_push_article/#3-install-required-packages","title":"\ud83d\udce6 3. Install Required Packages","text":"<pre><code>pip install python-dotenv requests\n</code></pre>"},{"location":"github_auto_push_article/#4-the-ultimate-push_to_githubpy-script","title":"\ud83e\udde0 4. The Ultimate <code>push_to_github.py</code> Script","text":"<pre><code># (Script inserted here)\n</code></pre> <p>(Script content removed for brevity, see project files.)</p>"},{"location":"github_auto_push_article/#done-you-now-have-a-fully-automated-github-pipeline","title":"\ud83c\udf89 Done! You Now Have a Fully Automated GitHub Pipeline","text":"<p>From this point forward, just drop this script into any new project and run:</p> <pre><code>python push_to_github.py\n</code></pre> <p>Boom \ud83d\udca5\u2014you\u2019re live on GitHub with all best practices in place.</p>"},{"location":"github_auto_push_article/#bonus-ideas-to-extend","title":"\ud83e\uddea Bonus Ideas to Extend","text":"<ul> <li>\ud83c\udf10 Auto-deploy with GitHub Pages or Streamlit</li> <li>\ud83e\uddea Run unit tests before push</li> <li>\ud83d\udcca Auto-generate markdown reports</li> <li>\ud83d\uddc3\ufe0f Archive previous versions with Git tags</li> </ul>"},{"location":"github_auto_push_article/#final-thoughts","title":"\ud83d\udcac Final Thoughts","text":"<p>This little automation project started with a simple goal: make GitHub pushing easier. But as you can see, it can scale into a full-blown CI-lite solution.</p> <p>One script. One command. Complete version control peace of mind.</p>"}]}